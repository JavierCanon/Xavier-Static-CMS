@page "/categories"
@inherits BaseCategoryPage

<PageHeader>
    <PageHeaderTitle>Categories</PageHeaderTitle>
    <PageHeaderBreadcrumb>
        <Breadcrumb>
            <BreadcrumbItem>
                <a href="">
                    <MdiIcon Type="home" />
                    <span>Home</span>
                </a>
            </BreadcrumbItem>
            <BreadcrumbItem>
                <span>
                    <MdiIcon Type="folder" />
                    <span>Categories</span>
                </span>
            </BreadcrumbItem>
        </Breadcrumb>
    </PageHeaderBreadcrumb>
</PageHeader>

<div class="container">
    <Loader OnLoad="@OnLoad" @ref="loader">
        <div>
            <Tree Nodes="TreeNodes">
            </Tree>
        </div>
    </Loader>
</div>

@code {
    private CategoryTree Data;

    private List<TreeNode> TreeNodes { get; set; } = new List<TreeNode>();

    private Loader loader;

    private async Task OnLoad()
    {
        Data = await Service.PostService.GetCategories();
        foreach (var v in Data.Root.Children.Values)
        {
            TreeNodes.Add(BuildTreeNode(v));
        }
    }

    TreeNode BuildTreeNode(CategoryTree.Node node)
    {
        TreeNode result = new TreeNode
        {
            Text = node.Category.OneNameOrDefault(),
            NodeTemplate = NodeTemplate,
            Key = node.Category.ToString(),
            IsExpanded = true
        };
        foreach (var v in node.Children.Values)
        {
            result.Nodes.Add(BuildTreeNode(v));
        }
        return result;
    }

    RenderFragment<TreeNode> NodeTemplate = ctx =>@<Template>
        <span style="font-size: 18px;" class="m-1">
            <MdiIcon Type="folder"/>
            <a href="categories/@HttpUtility.UrlEncode(ctx.Key)">@ctx.Text</a>
        </span>
    </Template>;
}
